version: '3'

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  #  mongo_seed:
  #    build:
  #      context: .
  #      dockerfile: ./build/mongo_seed/Dockerfile
  #    links:
  #      - mongo

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  python:
    container_name: python
    hostname: python
    build:
      dockerfile: build/python/Dockerfile
      context: .
    environment:
      FLASK_APP: main.py
      FLASK_DEBUG: 1
      FLASK_ENV: develop
      SECRET_KEY: sadasfdsadasd
      MONGO_URL: mongodb://root:example@mongo:27017/admin
      TOKEN_ALGORITHM: HS512
      TOKEN_SECRET: asmklasfhiudhfiu
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.python.rule=Host(`discord.docker.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.python.loadbalancer.server.port=5000"
    volumes:
      - ./:/app

  node:
    working_dir: /app-client
    container_name: node
    command: npm run start
    build:
      context: .
      dockerfile: ./build/node/Dockerfile
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node.rule=Host(`discord.docker.localhost`)"
      - "traefik.http.services.node.loadbalancer.server.port=4200"
    volumes:
      - ./client:/app-client
      - /app-client/node_modules

  proxy:
    image: traefik:v2.2
    container_name: proxy
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "5000:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

